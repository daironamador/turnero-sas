
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ymiohanwjypzkhjrtqlf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InltaW9oYW53anlwemtoanJ0cWxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE1NzQ4MTksImV4cCI6MjA1NzE1MDgxOX0.ELDyIr-4-YPmciAtSAguD7HmdW31SgSkGchLpeIHqFI";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Función para crear un nuevo usuario
export const createUser = async (email: string, password: string, userData: any) => {
  try {
    // Create user in Auth first and only in Auth
    const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
      email,
      password,
      options: {
        data: {
          name: userData.name,
          username: userData.username,
          role: userData.role,
          service_ids: userData.serviceIds
        }
      }
    });
    
    // If there's an error during signup
    if (signUpError) {
      console.log('SignUp error:', signUpError.message);
      return { user: null, error: signUpError, message: signUpError.message };
    }
    
    // If signup is successful, return the user
    return { 
      user: signUpData.user, 
      error: null,
      message: 'Usuario creado correctamente en sistema de autenticación. Se ha enviado un correo de verificación.'
    };
  } catch (error: any) {
    console.error('Error inesperado al crear usuario:', error);
    return { user: null, error, message: error.message };
  }
};

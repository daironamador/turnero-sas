
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ymiohanwjypzkhjrtqlf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InltaW9oYW53anlwemtoanJ0cWxmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE1NzQ4MTksImV4cCI6MjA1NzE1MDgxOX0.ELDyIr-4-YPmciAtSAguD7HmdW31SgSkGchLpeIHqFI";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Función para crear un nuevo usuario
export const createUser = async (email: string, password: string, userData: any) => {
  try {
    const { data, error } = await supabase.auth.signUp({
      email,
      password,
      options: {
        data: {
          name: userData.name,
          username: userData.username,
          role: userData.role,
          service_ids: userData.serviceIds
        }
      }
    });

    if (error) {
      console.error('Error al crear usuario:', error.message);
      return { user: null, error };
    }

    // Si la creación es exitosa, crear el registro en la tabla de usuarios
    if (data.user) {
      const { error: userError } = await supabase
        .from('users')
        .insert([
          {
            id: data.user.id,
            email: email,
            username: userData.username,
            name: userData.name,
            role: userData.role,
            service_ids: userData.serviceIds,
            is_active: true
          }
        ]);

      if (userError) {
        console.error('Error al crear registro de usuario:', userError.message);
        return { user: null, error: userError };
      }
    }

    return { user: data.user, error: null };
  } catch (error: any) {
    console.error('Error inesperado al crear usuario:', error);
    return { user: null, error };
  }
};
